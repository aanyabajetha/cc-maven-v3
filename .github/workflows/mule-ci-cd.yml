name: Mule CI / CD

on:
  push:
    branches:
      - master        # adjust as needed
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: Build Mule Application
        run: mvn clean package -B

      - name: Archive build artifact
        uses: actions/upload-artifact@v4
        with:
          name: mule-app
          path: target/*.jar  # adjust if artifact name differs

  publish-and-deploy:
    name: Publish to Exchange & Deploy to CloudHub
    runs-on: ubuntu-latest
    needs: build

    # Inject Connected App credentials as environment variables
    env:
      ANYPOINT_CONNECTED_APP_CLIENT_ID: ${{ secrets.ANYPOINT_CONNECTED_APP_CLIENT_ID }}
      ANYPOINT_CONNECTED_APP_CLIENT_SECRET: ${{ secrets.ANYPOINT_CONNECTED_APP_CLIENT_SECRET }}
      MAVEN_OPTS: >
        -Denv.ANYPOINT_CONNECTED_APP_CLIENT_ID=${ANYPOINT_CONNECTED_APP_CLIENT_ID}
        -Denv.ANYPOINT_CONNECTED_APP_CLIENT_SECRET=${ANYPOINT_CONNECTED_APP_CLIENT_SECRET}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download built artifact
        uses: actions/download-artifact@v4
        with:
          name: mule-app
          path: target/

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: Configure Maven settings
        run: |
          mkdir -p ~/.m2
          cp ./settings.xml ~/.m2/settings.xml

      # Optional debug (remove after confirming secrets are loaded correctly)
      - name: Debug environment variables
        run: |
          echo "Client Secret length: ${#ANYPOINT_CONNECTED_APP_CLIENT_SECRET}"

      - name: Publish to Exchange
        run: mvn deploy -B -Dmaven.test.skip=true --settings ~/.m2/settings.xml

      - name: Deploy to CloudHub
        run: mvn clean deploy -B -DmuleDeploy --settings ~/.m2/settings.xml
